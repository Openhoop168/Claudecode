name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

# 顶层给写权限（双保险）
permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: read
  id-token: write

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      id-token: write

    env:
      # 可选：如果你想显式指定 API Base，就在仓库 Secrets 里设置 ANTHROPIC_BASE_URL
      # - 留空/未设置：按官方 Anthropic API 处理
      # - 如果包含 "bigmodel.cn"：识别为智谱网关
      BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}

    steps:
      # 1) Checkout（用 PAT，才能推分支）
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GH_PAT }}

      # 2) 配置 git 身份（提交记录里显示谁）
      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # 3) 识别提供方（Anthropic 官方 or 智谱网关）
      - name: Detect provider (Anthropic vs Zhipu)
        id: detect
        shell: bash
        run: |
          set -e
          BASE="${BASE_URL}"
          if [[ -z "$BASE" ]]; then
            echo "No BASE_URL provided; assume Anthropic official."
            echo "provider=anthropic" >> "$GITHUB_OUTPUT"
            echo "base=https://api.anthropic.com" >> "$GITHUB_OUTPUT"
          else
            L=$(echo "$BASE" | tr '[:upper:]' '[:lower:]')
            if [[ "$L" == *"bigmodel.cn"* ]]; then
              echo "Detected Zhipu (BigModel) gateway."
              echo "provider=zhipu" >> "$GITHUB_OUTPUT"
              echo "base=${BASE}" >> "$GITHUB_OUTPUT"
            else
              echo "Custom base (non-zhipu); treat as Anthropic compatible."
              echo "provider=anthropic" >> "$GITHUB_OUTPUT"
              echo "base=${BASE}" >> "$GITHUB_OUTPUT"
            fi
          fi

      # 4) 用识别出的 base /v1/models 探活（200 才继续）
      - name: Verify API key against selected base
        env:
          KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          BASE: ${{ steps.detect.outputs.base }}
        run: |
          set -e
          echo "Pinging $BASE/v1/models ..."
          CODE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "x-api-key: $KEY" \
            -H "anthropic-version: 2023-06-01" \
            "$BASE/v1/models")
          echo "HTTP $CODE"
          test "$CODE" = "200"

      # 5) 打印模型列表（方便排查）
      - name: Dump models (debug)
        env:
          KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          BASE: ${{ steps.detect.outputs.base }}
        run: |
          curl -s "$BASE/v1/models" \
            -H "x-api-key: $KEY" \
            -H "anthropic-version: 2023-06-01" | jq .

      # 6) 选模型：Anthropic 选 claude-*, 智谱选 glm-*
      - name: Choose available model
        id: choose_model
        env:
          KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          BASE: ${{ steps.detect.outputs.base }}
          PROVIDER: ${{ steps.detect.outputs.provider }}
        run: |
          set -e
          MODELS=$(curl -s "$BASE/v1/models" \
            -H "x-api-key: $KEY" \
            -H "anthropic-version: 2023-06-01")

          if [[ "$PROVIDER" == "zhipu" ]]; then
            # 智谱网关返回 glm 系列；优先更强的
            PREFER=("glm-4.5" "glm-4.5-Air" "glm-4" "glm-3-turbo")
          else
            # Anthropic 官方模型（按可用度/稳定性回退）
            PREFER=("claude-3-7-sonnet-20250219" "claude-3-7-sonnet-latest" "claude-3-5-sonnet-20241022" "claude-3-5-sonnet-20240620" "claude-3-sonnet-20240229" "claude-3-opus-20240229")
          fi

          CHOSEN=""
          for name in "${PREFER[@]}"; do
            HIT=$(echo "$MODELS" | jq -r --arg n "$name" '.data[]?.id | select(. == $n) | . // empty' | head -n 1 || true)
            if [[ -n "$HIT" ]]; then
              CHOSEN="$HIT"
              break
            fi
          done

          if [[ -z "$CHOSEN" ]]; then
            # 列表第一个兜底
            CHOSEN=$(echo "$MODELS" | jq -r '.data[0].id // empty')
          fi

          if [[ -z "$CHOSEN" ]]; then
            echo "❌ No model id found from $BASE/v1/models"
            exit 1
          fi

          echo "Picked model: $CHOSEN"
          echo "model=$CHOSEN" >> "$GITHUB_OUTPUT"

      # 7) 如果是智谱网关：跳过运行，并自动回一条解释性评论（不会失败）
      - name: Explain unsupported gateway (Zhipu)
        if: ${{ steps.detect.outputs.provider == 'zhipu' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const body = `
**Claude Code 未执行**
- 检测到你当前使用的是 **智谱 BigModel 网关**（\`${{ steps.detect.outputs.base }}\`）。
- 官方 GitHub Action \`anthropics/claude-code-action\` **只支持 Anthropic 官方 API**，不能使用第三方网关 Key。
- 解决办法：
  1. 去 Anthropic Console 生成 **官方 API Key**（前缀 \`sk-ant-\`），并在仓库 Secrets 里设置 \`ANTHROPIC_API_KEY\`；
  2. （可选）删除 \`ANTHROPIC_BASE_URL\`，或把它改成 \`https://api.anthropic.com\`；
  3. 然后在 Issue/PR 里再评论 \`@claude ...\` 触发即可。

> 你目前的模型列表已经正常返回（如 \`${{ steps.choose_model.outputs.model }}\`），说明网关 Key 可用，只是官方 Action 不支持网关调用。`;
            const payload = context.payload;
            if (payload.issue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: payload.issue.number,
                body
              });
            } else if (payload.pull_request) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: payload.pull_request.number,
                body
              });
            }
            core.notice("Skipped running Claude Code because provider=zhipu (gateway not supported).")

      # 8) 如果是 Anthropic 官方：真正运行 Claude Code
      - name: Run Claude Code
        if: ${{ steps.detect.outputs.provider == 'anthropic' }}
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          github_token: ${{ secrets.GH_PAT }}                 # 用 PAT 才能推分支/回评
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }} # 官方 key（前缀 sk-ant-）
          model: ${{ steps.choose_model.outputs.model }}
          additional_permissions: |
            actions: read
          trigger_phrase: "@claude"
          branch_prefix: "claude/"
          mode: "tag"

      # 9) 兜底推分支（仅官方模式下有意义）
      - name: Push branch if created (fallback)
        if: ${{ always() && steps.detect.outputs.provider == 'anthropic' }}
        run: |
          set -e
          CUR=$(git rev-parse --abbrev-ref HEAD)
          echo "Current branch: $CUR"
          if [[ "$CUR" == claude/* ]]; then
            if git ls-remote --exit-code --heads origin "$CUR" >/dev/null 2>&1; then
              echo "Remote branch already exists: origin/$CUR"
            else
              echo "Pushing branch: $CUR"
              git push -u origin "$CUR"
            fi
          else
            echo "Not on a claude/* branch; nothing to push."
